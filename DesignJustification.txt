    Our game design hinges upon user interaction with the main 10 commands.
It is a fully text based game so all interaction with the user occurs through print statements
to the console and a scanner readings the users input. The main class houses the initalizations of 
all of the items, locations, and NPCS as well as quite a few methods that work to read the users input, 
ensure that an item/location/NPC is in the users input if neccessary, and run the commands the users input.
Additionally, in the main method there are three primary game loops called phase one, phase two, and phase three. 
These are the methods that run single turn of each round of the game, while the actual loops can be found in 
the main method of the Main class. The main class is by far the largest and does most of the heavy lifting for the
game. I think this method could be improved upon by the use of static variables that are avalible to 
other classes. Instead of having to pass in locations, NPCS, and Items from this class to any other class
if they were static the other classes could acess them. This would help to simplify some of the method calls
and better sort methods into different classes. 
    Another large class is the person class this method also does a lot of heavy lifitng for the game, and 
actualizes a lot of the commands called by the user from main. Methods like move, fight, look around, search, lookAt, 
grab, drop, and save are all found here. Addittionally, this class houses the health, inventory, points, and curent location 
of the player. As well as a boolean isDead which checks if the player is dead or alive.
    The LocationMap class is how our user interacts with locations of the game. It is organized in a hashtable format 
with the keys being names of the location, and the values being a array of strings of the name of locations that the key room is connected to.
When a player wants to move the location map class provides all the locations they can move to. While this map technique
does work well for our game. I think we could've also changed the value to be an array of location objects. This would've 
particularly helpful when creating the move methods for the librarian, hall monitors, and science teacher because currently 
we have to chnage the string of the location name to an actual location in the main method. However, this would've 
required the aforementioned static locations.
    The student, drained student, teacher, librarian, hall monitor, and science teacher are all children of the NPC 
class. They all have locations and are able to talk to the user. The teacher is the parent class of the hall monitor, 
librarian and science teacher who all have fight methods and move methods that make it so the game get's harder 
depended on what stage you are at. In phase one, The teacher does not move and only fights when provoked. Hall monitors move to a 
rnadom location adjacent of their current location and only do two damage when fighitng. The librarian moves to a random Location
adjacent of the player every two player moves and they do four damage when they fight. The science teacher moves to the users location
every three turns and they do three damage.
    The note, weapon classes are children of the item class which has basic acessor methods. The note weapon expands on this class by having 
a use method which prints out an attack description for the weapon used and attacks the NPC's. The breakable weapon is the child of 
the weapon class and adds a method for the weapon to fall apart after a certain number of uses. 
    I also think in the future it could be helpful to add one larger class possibly called something along the lines of game object 
which contains a lot of the acessor methods that are present in items, NPCS, and Person such as get name, get location, get description, since
these simple methods were written a few different times throughout the course of the game. 
